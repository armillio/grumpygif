//
//  GrumpyGifStyleKit.m
//  GrumpyGif
//
//  Created by Armando Carmona on 13/03/15.
//  Copyright (c) 2015 AEC. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "GrumpyGifStyleKit.h"


@implementation GrumpyGifStyleKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawSearchWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color3 = [UIColor colorWithRed: 0.319 green: 0.722 blue: 0.655 alpha: 1];
    UIColor* color0 = [UIColor colorWithRed: 0.556 green: 0.372 blue: 0.168 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.788 green: 0.566 blue: 0.305 alpha: 1];
    UIColor* color5 = [UIColor colorWithRed: 0.902 green: 0.912 blue: 0.921 alpha: 1];
    UIColor* color6 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.7];

    //// Shape Drawing
    UIBezierPath* shapePath = UIBezierPath.bezierPath;
    [shapePath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.08363 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.98137 * CGRectGetHeight(frame))];
    [shapePath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.01863 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.98137 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.06569 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.99931 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.03656 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.99931 * CGRectGetHeight(frame))];
    [shapePath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.01863 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.98137 * CGRectGetHeight(frame))];
    [shapePath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.01863 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.91635 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.00066 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.96340 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.00066 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.93431 * CGRectGetHeight(frame))];
    [shapePath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.35509 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.57988 * CGRectGetHeight(frame))];
    [shapePath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.42009 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.57992 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.37301 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.56198 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.40212 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.56198 * CGRectGetHeight(frame))];
    [shapePath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.42009 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.57992 * CGRectGetHeight(frame))];
    [shapePath addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.42007 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.64490 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.43804 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.59783 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.43804 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62692 * CGRectGetHeight(frame))];
    [shapePath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.08363 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.98137 * CGRectGetHeight(frame))];
    [shapePath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.08363 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.98137 * CGRectGetHeight(frame))];
    [shapePath closePath];
    shapePath.miterLimit = 4;

    shapePath.usesEvenOddFillRule = YES;

    [color0 setFill];
    [shapePath fill];


    //// Shape 2 Drawing
    UIBezierPath* shape2Path = UIBezierPath.bezierPath;
    [shape2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.12858 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.99370 * CGRectGetHeight(frame))];
    [shape2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.03901 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.96101 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.11286 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 1.00939 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.07276 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.99478 * CGRectGetHeight(frame))];
    [shape2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.03901 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.96101 * CGRectGetHeight(frame))];
    [shape2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.00631 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.87144 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.00522 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.92723 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + -0.00939 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88712 * CGRectGetHeight(frame))];
    [shape2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.36363 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51407 * CGRectGetHeight(frame))];
    [shape2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.45323 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.54679 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.37936 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49839 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.41946 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51302 * CGRectGetHeight(frame))];
    [shape2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.45323 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.54679 * CGRectGetHeight(frame))];
    [shape2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.48591 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.63639 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.48700 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.58050 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.50166 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62061 * CGRectGetHeight(frame))];
    [shape2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.12858 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.99370 * CGRectGetHeight(frame))];
    [shape2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.12858 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.99370 * CGRectGetHeight(frame))];
    [shape2Path closePath];
    shape2Path.miterLimit = 4;

    shape2Path.usesEvenOddFillRule = YES;

    [color2 setFill];
    [shape2Path fill];


    //// Shape 3 Drawing
    UIBezierPath* shape3Path = UIBezierPath.bezierPath;
    [shape3Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.63753 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.69292 * CGRectGetHeight(frame))];
    [shape3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.30707 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36245 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.45505 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.69292 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.30707 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.54497 * CGRectGetHeight(frame))];
    [shape3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.63753 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.03199 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.30707 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17992 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.45505 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.03199 * CGRectGetHeight(frame))];
    [shape3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.96800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36245 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.82009 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.03199 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.96800 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17993 * CGRectGetHeight(frame))];
    [shape3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.63753 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.69292 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.96801 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.54497 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.82009 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.69292 * CGRectGetHeight(frame))];
    [shape3Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.63753 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.69292 * CGRectGetHeight(frame))];
    [shape3Path closePath];
    shape3Path.miterLimit = 4;

    shape3Path.usesEvenOddFillRule = YES;

    [color3 setFill];
    [shape3Path fill];


    //// Shape 4 Drawing
    UIBezierPath* shape4Path = UIBezierPath.bezierPath;
    [shape4Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.34709 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52901 * CGRectGetHeight(frame))];
    [shape4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.30009 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.57598 * CGRectGetHeight(frame))];
    [shape4Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.43533 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.68535 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.30009 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.57598 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.34301 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67079 * CGRectGetHeight(frame))];
    [shape4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.46942 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65127 * CGRectGetHeight(frame))];
    [shape4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.46942 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.60720 * CGRectGetHeight(frame))];
    [shape4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.34709 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52901 * CGRectGetHeight(frame))];
    [shape4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.34709 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52901 * CGRectGetHeight(frame))];
    [shape4Path closePath];
    shape4Path.miterLimit = 4;

    shape4Path.usesEvenOddFillRule = YES;

    [color0 setFill];
    [shape4Path fill];


    //// Shape 5 Drawing
    UIBezierPath* shape5Path = UIBezierPath.bezierPath;
    [shape5Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.38138 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.10627 * CGRectGetHeight(frame))];
    [shape5Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.38138 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.61863 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.23986 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.24775 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.23986 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.47717 * CGRectGetHeight(frame))];
    [shape5Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.89375 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.61866 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.52290 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76014 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.75226 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76014 * CGRectGetHeight(frame))];
    [shape5Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.89375 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.10627 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 1.03524 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.47717 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 1.03524 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.24775 * CGRectGetHeight(frame))];
    [shape5Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.38138 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.10627 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.75226 * CGRectGetWidth(frame), CGRectGetMinY(frame) + -0.03524 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.52289 * CGRectGetWidth(frame), CGRectGetMinY(frame) + -0.03524 * CGRectGetHeight(frame))];
    [shape5Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.38138 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.10627 * CGRectGetHeight(frame))];
    [shape5Path closePath];
    [shape5Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.82917 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55407 * CGRectGetHeight(frame))];
    [shape5Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.44596 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55407 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.72338 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65988 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.55180 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65990 * CGRectGetHeight(frame))];
    [shape5Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.44596 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17087 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.34013 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44827 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.34013 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27665 * CGRectGetHeight(frame))];
    [shape5Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.82917 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17084 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.55180 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.06503 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.72338 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.06503 * CGRectGetHeight(frame))];
    [shape5Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.82917 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55407 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.93503 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27668 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.93498 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.44826 * CGRectGetHeight(frame))];
    [shape5Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.82917 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55407 * CGRectGetHeight(frame))];
    [shape5Path closePath];
    shape5Path.miterLimit = 4;

    shape5Path.usesEvenOddFillRule = YES;

    [color5 setFill];
    [shape5Path fill];


    //// Shape 6 Drawing
    UIBezierPath* shape6Path = UIBezierPath.bezierPath;
    [shape6Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.45824 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32701 * CGRectGetHeight(frame))];
    [shape6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.47269 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36620 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.45147 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.34179 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.45790 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35940 * CGRectGetHeight(frame))];
    [shape6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51193 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35180 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.48752 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.37311 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.50513 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36652 * CGRectGetHeight(frame))];
    [shape6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.51366 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.34852 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.51193 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35180 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.51222 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35112 * CGRectGetHeight(frame))];
    [shape6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.67775 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.24040 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.52390 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32976 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.57329 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25012 * CGRectGetHeight(frame))];
    [shape6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.70348 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21852 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.69041 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.23916 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.70039 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.23016 * CGRectGetHeight(frame))];
    [shape6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.70432 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20813 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.70432 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21525 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.70467 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21176 * CGRectGetHeight(frame))];
    [shape6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.67205 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.18157 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.70269 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.19190 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.68829 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17994 * CGRectGetHeight(frame))];
    [shape6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.45824 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32701 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.51808 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.19742 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.45975 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32402 * CGRectGetHeight(frame))];
    [shape6Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.45824 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32701 * CGRectGetHeight(frame))];
    [shape6Path closePath];
    shape6Path.miterLimit = 4;

    shape6Path.usesEvenOddFillRule = YES;

    [color6 setFill];
    [shape6Path fill];
}

+ (void)drawShareWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.184 green: 0.258 blue: 0.257 alpha: 1];
    UIColor* color7 = [UIColor colorWithRed: 0.282 green: 0.413 blue: 0.411 alpha: 1];
    UIColor* color8 = [UIColor colorWithRed: 0.4 green: 0.58 blue: 0.576 alpha: 1];

    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31400 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.85777 * CGRectGetHeight(frame))];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.27363 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.85777 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.30286 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.86889 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.28477 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.86889 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.15589 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74003 * CGRectGetHeight(frame))];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.15589 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.69965 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.14475 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72889 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.14475 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.71081 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.22950 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62604 * CGRectGetHeight(frame))];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.26987 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62604 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.24065 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.61490 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.25872 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.61490 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.38760 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74379 * CGRectGetHeight(frame))];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.38760 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.78415 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.39874 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.75493 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.39875 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77301 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31400 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.85777 * CGRectGetHeight(frame))];
    [bezier2Path closePath];
    bezier2Path.miterLimit = 4;

    [color7 setFill];
    [bezier2Path fill];


    //// Bezier 4 Drawing
    UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
    [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.38748 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.78200 * CGRectGetHeight(frame))];
    [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.34769 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.78200 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.37651 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.79297 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.35867 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.79297 * CGRectGetHeight(frame))];
    [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.23166 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66596 * CGRectGetHeight(frame))];
    [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.23166 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62617 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.22068 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65498 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.22068 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.63716 * CGRectGetHeight(frame))];
    [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.42263 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.24823 * CGRectGetHeight(frame))];
    [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.76544 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.59104 * CGRectGetHeight(frame))];
    [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.38748 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.78200 * CGRectGetHeight(frame))];
    [bezier4Path closePath];
    bezier4Path.miterLimit = 4;

    [color7 setFill];
    [bezier4Path fill];


    //// Bezier 6 Drawing
    UIBezierPath* bezier6Path = UIBezierPath.bezierPath;
    [bezier6Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.63867 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.58857 * CGRectGetHeight(frame))];
    [bezier6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.43348 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.58857 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.58201 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.53036 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.49014 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.53036 * CGRectGetHeight(frame))];
    [bezier6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.43349 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.79938 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.37684 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.64679 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.37684 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74116 * CGRectGetHeight(frame))];
    [bezier6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.63867 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.79938 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.49014 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.85760 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.58201 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.85760 * CGRectGetHeight(frame))];
    [bezier6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.63867 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.58857 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.69532 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74116 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.69533 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.64679 * CGRectGetHeight(frame))];
    [bezier6Path closePath];
    [bezier6Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.47452 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.75721 * CGRectGetHeight(frame))];
    [bezier6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.47452 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.63073 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.44053 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72229 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.44052 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66566 * CGRectGetHeight(frame))];
    [bezier6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.59763 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.63073 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.50853 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.59579 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.56364 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.59581 * CGRectGetHeight(frame))];
    [bezier6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.59763 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.75721 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.63164 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66566 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.63164 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72229 * CGRectGetHeight(frame))];
    [bezier6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.47452 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.75721 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.56364 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.79214 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.50853 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.79215 * CGRectGetHeight(frame))];
    [bezier6Path closePath];
    bezier6Path.miterLimit = 4;

    [color7 setFill];
    [bezier6Path fill];


    //// Bezier 8 Drawing
    UIBezierPath* bezier8Path = UIBezierPath.bezierPath;
    [bezier8Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.62509 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30431 * CGRectGetHeight(frame))];
    [bezier8Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.60520 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.28442 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.61412 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30431 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.60520 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.29542 * CGRectGetHeight(frame))];
    [bezier8Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.60520 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11211 * CGRectGetHeight(frame))];
    [bezier8Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.62509 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09222 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.60520 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.10111 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.61412 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09222 * CGRectGetHeight(frame))];
    [bezier8Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.64497 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11211 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.63608 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.09222 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.64499 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.10112 * CGRectGetHeight(frame))];
    [bezier8Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.64499 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.28442 * CGRectGetHeight(frame))];
    [bezier8Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.62509 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30431 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.64499 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.29541 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.63608 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.30430 * CGRectGetHeight(frame))];
    [bezier8Path closePath];
    bezier8Path.miterLimit = 4;

    [color8 setFill];
    [bezier8Path fill];


    //// Bezier 10 Drawing
    UIBezierPath* bezier10Path = UIBezierPath.bezierPath;
    [bezier10Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.66164 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35047 * CGRectGetHeight(frame))];
    [bezier10Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.66164 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.32234 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.65388 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.34270 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.65386 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.33011 * CGRectGetHeight(frame))];
    [bezier10Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.78348 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20049 * CGRectGetHeight(frame))];
    [bezier10Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.81161 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20049 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.79125 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.19272 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.80386 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.19272 * CGRectGetHeight(frame))];
    [bezier10Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.81161 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.22861 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.81940 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20827 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.81938 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.22086 * CGRectGetHeight(frame))];
    [bezier10Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.68977 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35047 * CGRectGetHeight(frame))];
    [bezier10Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.66164 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35047 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.68199 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35823 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.66942 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.35823 * CGRectGetHeight(frame))];
    [bezier10Path closePath];
    bezier10Path.miterLimit = 4;

    [color8 setFill];
    [bezier10Path fill];


    //// Bezier 12 Drawing
    UIBezierPath* bezier12Path = UIBezierPath.bezierPath;
    [bezier12Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.70399 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.38320 * CGRectGetHeight(frame))];
    [bezier12Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.72387 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36331 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.70399 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.37223 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.71288 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36331 * CGRectGetHeight(frame))];
    [bezier12Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.89620 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36331 * CGRectGetHeight(frame))];
    [bezier12Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.91608 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.38320 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.90718 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.36331 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.91609 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.37223 * CGRectGetHeight(frame))];
    [bezier12Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.89620 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40308 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.91608 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.39419 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.90718 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40308 * CGRectGetHeight(frame))];
    [bezier12Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.72387 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40308 * CGRectGetHeight(frame))];
    [bezier12Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.70399 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.38320 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.71289 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.40308 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.70399 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.39419 * CGRectGetHeight(frame))];
    [bezier12Path closePath];
    bezier12Path.miterLimit = 4;

    [color8 setFill];
    [bezier12Path fill];


    //// Bezier 14 Drawing
    UIBezierPath* bezier14Path = UIBezierPath.bezierPath;
    [bezier14Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.40407 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25046 * CGRectGetHeight(frame))];
    [bezier14Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.47044 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25044 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.42238 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.23212 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.45212 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.23210 * CGRectGetHeight(frame))];
    [bezier14Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.75799 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.53798 * CGRectGetHeight(frame))];
    [bezier14Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.75799 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.60438 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.77632 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.55631 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.77632 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.58607 * CGRectGetHeight(frame))];
    [bezier14Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.69163 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.60438 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.73964 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62271 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.70995 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62268 * CGRectGetHeight(frame))];
    [bezier14Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.40407 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.31681 * CGRectGetHeight(frame))];
    [bezier14Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.40407 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25046 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.38576 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.29850 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.38574 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26878 * CGRectGetHeight(frame))];
    [bezier14Path closePath];
    bezier14Path.miterLimit = 4;

    [color8 setFill];
    [bezier14Path fill];


    //// Bezier 16 Drawing
    UIBezierPath* bezier16Path = UIBezierPath.bezierPath;
    [bezier16Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31400 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.85777 * CGRectGetHeight(frame))];
    [bezier16Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.27363 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.85777 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.30286 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.86889 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.28477 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.86889 * CGRectGetHeight(frame))];
    [bezier16Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.15589 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74003 * CGRectGetHeight(frame))];
    [bezier16Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.15589 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.69965 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.14475 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72889 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.14475 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.71081 * CGRectGetHeight(frame))];
    [bezier16Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.22950 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62604 * CGRectGetHeight(frame))];
    [bezier16Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.38760 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.78415 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.24065 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.61490 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.39876 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77301 * CGRectGetHeight(frame))];
    [bezier16Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31400 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.85777 * CGRectGetHeight(frame))];
    [bezier16Path closePath];
    bezier16Path.miterLimit = 4;

    [color setFill];
    [bezier16Path fill];
}

+ (void)drawEliminateWithFrame: (CGRect)frame
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color10 = [UIColor colorWithRed: 0.118 green: 0.118 blue: 0.118 alpha: 1];
    UIColor* color11 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];

    //// Group
    {
    }


    //// Fill-2 Drawing
    UIBezierPath* fill2Path = UIBezierPath.bezierPath;
    [fill2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.27603 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26226 * CGRectGetHeight(frame))];
    [fill2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.21228 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.31184 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.27602 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.28964 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.24748 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.31183 * CGRectGetHeight(frame))];
    [fill2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.14853 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26226 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.17706 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.31183 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.14853 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.28964 * CGRectGetHeight(frame))];
    [fill2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.21228 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21268 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.14853 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.23487 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.17706 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21268 * CGRectGetHeight(frame))];
    [fill2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.27603 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26226 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.24748 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21268 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.27602 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.23487 * CGRectGetHeight(frame))];
    [fill2Path closePath];
    fill2Path.miterLimit = 4;

    fill2Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill2Path fill];


    //// Fill-3 Drawing
    UIBezierPath* fill3Path = UIBezierPath.bezierPath;
    [fill3Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.26531 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27298 * CGRectGetHeight(frame))];
    [fill3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31489 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20922 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.29268 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27298 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.31489 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.24443 * CGRectGetHeight(frame))];
    [fill3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.26531 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.14547 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.31487 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17402 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.29268 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.14547 * CGRectGetHeight(frame))];
    [fill3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.21571 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20922 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.23792 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.14547 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.21573 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17402 * CGRectGetHeight(frame))];
    [fill3Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.26531 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27298 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.21571 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.24443 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.23792 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27298 * CGRectGetHeight(frame))];
    [fill3Path closePath];
    fill3Path.miterLimit = 4;

    fill3Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill3Path fill];


    //// Fill-4 Drawing
    UIBezierPath* fill4Path = UIBezierPath.bezierPath;
    [fill4Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.20692 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25690 * CGRectGetHeight(frame))];
    [fill4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.73673 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.78671 * CGRectGetHeight(frame))];
    [fill4Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.78814 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.73529 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.75092 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.80090 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.80234 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74948 * CGRectGetHeight(frame))];
    [fill4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.25833 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20547 * CGRectGetHeight(frame))];
    [fill4Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.20692 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25690 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.24415 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.19128 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.19272 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.24270 * CGRectGetHeight(frame))];
    [fill4Path closePath];
    fill4Path.miterLimit = 4;

    fill4Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill4Path fill];


    //// Fill-5 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, CGRectGetMinX(frame) + 92.64, CGRectGetMinY(frame) + 98.97);

    UIBezierPath* fill5Path = UIBezierPath.bezierPath;
    [fill5Path moveToPoint: CGPointMake(0, -8.08)];
    [fill5Path addCurveToPoint: CGPointMake(-6.28, 0) controlPoint1: CGPointMake(-3.47, -8.07) controlPoint2: CGPointMake(-6.28, -4.46)];
    [fill5Path addCurveToPoint: CGPointMake(0, 8.07) controlPoint1: CGPointMake(-6.28, 4.46) controlPoint2: CGPointMake(-3.47, 8.08)];
    [fill5Path addCurveToPoint: CGPointMake(6.28, 0) controlPoint1: CGPointMake(3.47, 8.07) controlPoint2: CGPointMake(6.28, 4.46)];
    [fill5Path addCurveToPoint: CGPointMake(0, -8.08) controlPoint1: CGPointMake(6.28, -4.46) controlPoint2: CGPointMake(3.47, -8.07)];
    [fill5Path closePath];
    fill5Path.miterLimit = 4;

    fill5Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill5Path fill];

    CGContextRestoreGState(context);


    //// Fill-6 Drawing
    UIBezierPath* fill6Path = UIBezierPath.bezierPath;
    [fill6Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.72064 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72833 * CGRectGetHeight(frame))];
    [fill6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.78439 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67872 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.72064 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.70093 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.74919 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67874 * CGRectGetHeight(frame))];
    [fill6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.84814 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72833 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.81961 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67874 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.84814 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.70093 * CGRectGetHeight(frame))];
    [fill6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.78439 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77790 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.84814 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.75570 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.81961 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77789 * CGRectGetHeight(frame))];
    [fill6Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.72064 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72833 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.74919 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77790 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.72064 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.75570 * CGRectGetHeight(frame))];
    [fill6Path closePath];
    fill6Path.miterLimit = 4;

    fill6Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill6Path fill];


    //// Fill-7 Drawing
    UIBezierPath* fill7Path = UIBezierPath.bezierPath;
    [fill7Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.26531 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.71760 * CGRectGetHeight(frame))];
    [fill7Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31489 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.78134 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.29270 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.71761 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.31489 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74614 * CGRectGetHeight(frame))];
    [fill7Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.26531 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.84508 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.31489 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.81655 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.29270 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.84509 * CGRectGetHeight(frame))];
    [fill7Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.21573 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.78134 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.23793 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.84508 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.21573 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.81655 * CGRectGetHeight(frame))];
    [fill7Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.26531 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.71760 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.21573 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74614 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.23793 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.71761 * CGRectGetHeight(frame))];
    [fill7Path closePath];
    fill7Path.miterLimit = 4;

    fill7Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill7Path fill];


    //// Fill-8 Drawing
    UIBezierPath* fill8Path = UIBezierPath.bezierPath;
    [fill8Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.27603 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72829 * CGRectGetHeight(frame))];
    [fill8Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.21228 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67872 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.27603 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.70093 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.24749 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67872 * CGRectGetHeight(frame))];
    [fill8Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.14853 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72829 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.17707 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67874 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.14853 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.70093 * CGRectGetHeight(frame))];
    [fill8Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.21228 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77790 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.14853 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.75570 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.17707 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77789 * CGRectGetHeight(frame))];
    [fill8Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.27603 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72829 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.24749 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77790 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.27603 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.75570 * CGRectGetHeight(frame))];
    [fill8Path closePath];
    fill8Path.miterLimit = 4;

    fill8Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill8Path fill];


    //// Fill-9 Drawing
    UIBezierPath* fill9Path = UIBezierPath.bezierPath;
    [fill9Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.25995 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.78669 * CGRectGetHeight(frame))];
    [fill9Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.78976 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.25690 * CGRectGetHeight(frame))];
    [fill9Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.73834 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20547 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.80395 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.24269 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.75254 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.19127 * CGRectGetHeight(frame))];
    [fill9Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.20853 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.73528 * CGRectGetHeight(frame))];
    [fill9Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.25995 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.78669 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.19434 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74948 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.24575 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.80091 * CGRectGetHeight(frame))];
    [fill9Path closePath];
    fill9Path.miterLimit = 4;

    fill9Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill9Path fill];


    //// Fill-10 Drawing
    UIBezierPath* fill10Path = UIBezierPath.bezierPath;
    [fill10Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.72064 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26224 * CGRectGetHeight(frame))];
    [fill10Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.78441 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.31183 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.72065 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.28964 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.74919 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.31183 * CGRectGetHeight(frame))];
    [fill10Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.84814 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26224 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.81961 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.31183 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.84816 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.28964 * CGRectGetHeight(frame))];
    [fill10Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.78441 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21267 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.84814 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.23487 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.81961 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21269 * CGRectGetHeight(frame))];
    [fill10Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.72064 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.26224 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.74919 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.21269 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.72065 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.23486 * CGRectGetHeight(frame))];
    [fill10Path closePath];
    fill10Path.miterLimit = 4;

    fill10Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill10Path fill];


    //// Fill-11 Drawing
    UIBezierPath* fill11Path = UIBezierPath.bezierPath;
    [fill11Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.73139 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27298 * CGRectGetHeight(frame))];
    [fill11Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.68178 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20921 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.70399 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27298 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.68180 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.24441 * CGRectGetHeight(frame))];
    [fill11Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.73139 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.14547 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.68180 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17400 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.70399 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.14547 * CGRectGetHeight(frame))];
    [fill11Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.78096 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.20921 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.75875 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.14547 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.78094 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.17400 * CGRectGetHeight(frame))];
    [fill11Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.73139 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27298 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.78096 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.24441 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.75875 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.27298 * CGRectGetHeight(frame))];
    [fill11Path closePath];
    fill11Path.miterLimit = 4;

    fill11Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill11Path fill];


    //// Fill-13 Drawing
    UIBezierPath* fill13Path = UIBezierPath.bezierPath;
    [fill13Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.69572 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.41990 * CGRectGetHeight(frame))];
    [fill13Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50096 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.60132 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.69572 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52009 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.60853 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.60132 * CGRectGetHeight(frame))];
    [fill13Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.30619 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.41990 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.39340 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.60132 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.30619 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52009 * CGRectGetHeight(frame))];
    [fill13Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50096 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.23849 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.30619 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.31971 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.39340 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.23849 * CGRectGetHeight(frame))];
    [fill13Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.69572 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.41990 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.60853 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.23849 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.69572 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.31971 * CGRectGetHeight(frame))];
    [fill13Path closePath];
    fill13Path.miterLimit = 4;

    fill13Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill13Path fill];


    //// Fill-14 Drawing
    UIBezierPath* fill14Path = UIBezierPath.bezierPath;
    [fill14Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.64622 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51595 * CGRectGetHeight(frame))];
    [fill14Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.49888 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52070 * CGRectGetHeight(frame))];
    [fill14Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.35155 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51595 * CGRectGetHeight(frame))];
    [fill14Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.35155 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.60132 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.35155 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51595 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.31421 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.59599 * CGRectGetHeight(frame))];
    [fill14Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.42092 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.63067 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.35155 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.60132 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.40759 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62001 * CGRectGetHeight(frame))];
    [fill14Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.57685 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.63067 * CGRectGetHeight(frame))];
    [fill14Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.64622 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.60132 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.59019 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62001 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.64622 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.60132 * CGRectGetHeight(frame))];
    [fill14Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.64622 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51595 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.68357 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.59599 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.64622 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51595 * CGRectGetHeight(frame))];
    [fill14Path closePath];
    fill14Path.miterLimit = 4;

    fill14Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill14Path fill];


    //// Fill-15 Drawing
    UIBezierPath* fill15Path = UIBezierPath.bezierPath;
    [fill15Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.57787 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65638 * CGRectGetHeight(frame))];
    [fill15Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.55232 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66637 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.57787 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65896 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.56703 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66292 * CGRectGetHeight(frame))];
    [fill15Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.54750 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65535 * CGRectGetHeight(frame))];
    [fill15Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.54485 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66801 * CGRectGetHeight(frame))];
    [fill15Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50227 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67332 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.53121 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67080 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.51554 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67298 * CGRectGetHeight(frame))];
    [fill15Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.49874 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66352 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.50109 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67335 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.49990 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66352 * CGRectGetHeight(frame))];
    [fill15Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.49563 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67333 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.49773 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66352 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.49669 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67335 * CGRectGetHeight(frame))];
    [fill15Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.45989 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66935 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.48451 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67306 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.47173 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67149 * CGRectGetHeight(frame))];
    [fill15Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.45711 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65619 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.45889 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66916 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.45811 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65638 * CGRectGetHeight(frame))];
    [fill15Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.45244 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66789 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.45594 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65595 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.45277 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66796 * CGRectGetHeight(frame))];
    [fill15Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.42049 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65638 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.43459 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.66414 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.42049 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65935 * CGRectGetHeight(frame))];
    [fill15Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.42049 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.59692 * CGRectGetHeight(frame))];
    [fill15Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.43572 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.58711 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.42049 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.59150 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.42731 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.58711 * CGRectGetHeight(frame))];
    [fill15Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.56264 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.58711 * CGRectGetHeight(frame))];
    [fill15Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.57787 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.59692 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.57106 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.58711 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.57787 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.59150 * CGRectGetHeight(frame))];
    [fill15Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.57787 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65638 * CGRectGetHeight(frame))];
    [fill15Path closePath];
    fill15Path.miterLimit = 4;

    fill15Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill15Path fill];


    //// Fill-16 Drawing
    UIBezierPath* fill16Path = UIBezierPath.bezierPath;
    [fill16Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.60063 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67333 * CGRectGetHeight(frame))];
    [fill16Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.57587 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74685 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.60063 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.69901 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.59644 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72555 * CGRectGetHeight(frame))];
    [fill16Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50007 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77145 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.56153 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.76120 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.52719 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77145 * CGRectGetHeight(frame))];
    [fill16Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.42402 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.74675 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.47284 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.77145 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.43699 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.75972 * CGRectGetHeight(frame))];
    [fill16Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.39952 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67333 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.40361 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72552 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.39952 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.69911 * CGRectGetHeight(frame))];
    [fill16Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50007 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.71701 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.39952 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65774 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.42424 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.71701 * CGRectGetHeight(frame))];
    [fill16Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.60063 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.67333 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.57590 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.71701 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.60063 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.65774 * CGRectGetHeight(frame))];
    [fill16Path closePath];
    fill16Path.miterLimit = 4;

    fill16Path.usesEvenOddFillRule = YES;

    [color10 setFill];
    [fill16Path fill];


    //// Fill-17 Drawing
    UIBezierPath* fill17Path = UIBezierPath.bezierPath;
    [fill17Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.46851 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49105 * CGRectGetHeight(frame))];
    [fill17Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.41870 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52263 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.46851 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51315 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.44621 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52263 * CGRectGetHeight(frame))];
    [fill17Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.36890 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49105 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.39120 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52263 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.36890 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51315 * CGRectGetHeight(frame))];
    [fill17Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.41870 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45103 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.36890 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.47927 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.39120 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45103 * CGRectGetHeight(frame))];
    [fill17Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.46851 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49105 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.44621 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45103 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.46851 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.47126 * CGRectGetHeight(frame))];
    [fill17Path closePath];
    fill17Path.miterLimit = 4;

    fill17Path.usesEvenOddFillRule = YES;

    [color11 setFill];
    [fill17Path fill];


    //// Fill-18 Drawing
    UIBezierPath* fill18Path = UIBezierPath.bezierPath;
    [fill18Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.53432 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49105 * CGRectGetHeight(frame))];
    [fill18Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.58410 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52263 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.53432 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51315 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.55661 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52263 * CGRectGetHeight(frame))];
    [fill18Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.63392 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49105 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.61161 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52263 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.63392 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51315 * CGRectGetHeight(frame))];
    [fill18Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.58410 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45103 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.63392 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.47927 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.61161 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45103 * CGRectGetHeight(frame))];
    [fill18Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.53432 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49105 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.55661 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45103 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.53432 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.47126 * CGRectGetHeight(frame))];
    [fill18Path closePath];
    fill18Path.miterLimit = 4;

    fill18Path.usesEvenOddFillRule = YES;

    [color11 setFill];
    [fill18Path fill];


    //// Fill-19 Drawing
    UIBezierPath* fill19Path = UIBezierPath.bezierPath;
    [fill19Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50208 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49060 * CGRectGetHeight(frame))];
    [fill19Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.47273 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.57465 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.50208 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49060 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.47273 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.52596 * CGRectGetHeight(frame))];
    [fill19Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.53410 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.57598 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.47273 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.57465 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.50575 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.54764 * CGRectGetHeight(frame))];
    [fill19Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.50208 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.49060 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.53410 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.57598 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.52942 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.51795 * CGRectGetHeight(frame))];
    [fill19Path closePath];
    fill19Path.miterLimit = 4;

    fill19Path.usesEvenOddFillRule = YES;

    [color11 setFill];
    [fill19Path fill];
}

#pragma mark Generated Images

+ (UIImage*)imageOfSearchWithFrame: (CGRect)frame
{
    UIGraphicsBeginImageContextWithOptions(frame.size, NO, 0.0f);
    [GrumpyGifStyleKit drawSearchWithFrame: frame];

    UIImage* imageOfSearch = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfSearch;
}

+ (UIImage*)imageOfShareWithFrame: (CGRect)frame
{
    UIGraphicsBeginImageContextWithOptions(frame.size, NO, 0.0f);
    [GrumpyGifStyleKit drawShareWithFrame: frame];

    UIImage* imageOfShare = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfShare;
}

+ (UIImage*)imageOfEliminateWithFrame: (CGRect)frame
{
    UIGraphicsBeginImageContextWithOptions(frame.size, NO, 0.0f);
    [GrumpyGifStyleKit drawEliminateWithFrame: frame];

    UIImage* imageOfEliminate = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfEliminate;
}

@end
